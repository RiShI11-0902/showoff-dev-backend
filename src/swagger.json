{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Core API",
    "description": "API for Auth and Project features",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "Your Name",
      "email": "your.email@example.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/v1/api",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT token in the format: Bearer <token>"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Projects",
      "description": "Project-related operations"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logInUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in"
          },
          "403": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/project": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects",
        "responses": {
          "200": {
            "description": "List of all projects"
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project created"
          }
        }
      }
    },
    "/project/user/{userId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get projects by user ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects for the user"
          }
        }
      }
    },
    "/project/{projectId}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project details"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "Update a project by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated"
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete a project by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted"
          }
        }
      }
    },
    "/project/{projectId}/vote": {
      "post": {
        "tags": ["Projects"],
        "summary": "Vote for a project",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Vote recorded"
          }
        }
      }
    },
    "/project/{projectId}/submit": {
      "post": {
        "tags": ["Projects"],
        "summary": "Submit Project for Competition",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Vote recorded"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current authenticated user",
        "description": "Returns the currently authenticated user's profile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User object returned",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "No token provided or token invalid"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          }
        }
      }
    },
    "/winner": {
      "get": {
        "tags": ["Winner"],
        "summary": "Get all winning projects",
        "description": "Returns all projects that have won in previous competitions. Optionally filter by month.",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month in format YYYY-MM (e.g., 2025-06) to filter winners",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of winning projects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Winner"],
        "summary": "Decide current month winner",
        "description": "Determines and stores the winning project for the current month.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Winner selected and saved",
            "schema": {
              "$ref": "#/definitions/Project"
            }
          },
          "403": {
            "description": "Access denied - Admin only"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "logInUser": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "newUser": {
      "required": ["email", "password", "fullName", "role"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Project": {
      "required": ["title", "description"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "link": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "technologies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCompeting": {
          "type": "boolean"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "photo": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        },
        "confirmationCode": {
          "type": "string"
        },
        "resetPasswordToken": {
          "type": "string"
        },
        "resetPasswordExpires": {
          "type": "string"
        },
        "joined_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "portfolio": {
          "type": "string"
        },
        "linkedin": {
          "type": "string"
        },
        "github": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "videoIntroUrl": {
          "type": "string"
        },
        "experience": {
          "type": "string"
        },
        "availability": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certifications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workExperience": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "company": {
                "type": "string"
              },
              "position": {
                "type": "string"
              },
              "startDate": {
                "type": "string"
              },
              "endDate": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "education": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "institution": {
                "type": "string"
              },
              "degree": {
                "type": "string"
              },
              "fieldOfStudy": {
                "type": "string"
              },
              "startDate": {
                "type": "string"
              },
              "endDate": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        },
        "projects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
